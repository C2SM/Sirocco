name: test-integration

on:
  push:
    # only pushes to main trigger
    branches: [main]
  pull_request:
    # always triggered

jobs:
  integration_test:
    runs-on: ubuntu-latest
    timeout-minutes: 120 # when icon needs to be rebuild it can take 70 minutes
    strategy:
      matrix:
        python-version: ['3.12']  # ['3.10', '3.11', '3.12', '3.13']
        aiida-version: ['stable']

    permissions:
      packages: write

    services:
      slurm:
        image: xenonmiddleware/slurm:17
        ports:
        - 5001:22

    steps:
    - name: Check access to GitHub secrets
      run: echo "Pull request that trigger this workflow need to be on upstream repo to access GitHub secrets."; exit 1
      # if a pull request is merged from a fork
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork

    - uses: actions/checkout@v4

    - name: Set up Spack
      uses: spack/setup-spack@v2
      with:
        buildcache: true

    - name: Install Python and ICON
      env:
        SPACK_OCI_USER: leclairm
        SPACK_OCI_TOKEN: ${{ secrets.SPACK_OCI_TOKEN }}
      run: |
        sudo apt install gcc-11 g++-11 gfortran-11 graphviz graphviz-dev
        spack -e . add python@${{matrix.python-version}}
        spack -e . install

    - name: Push installation to buildcache and update index
      env:
        SPACK_OCI_USER: leclairm
        SPACK_OCI_TOKEN: ${{ secrets.SPACK_OCI_TOKEN }}
      run: spack -e . buildcache push --base-image ubuntu:latest --update-index local-buildcache
      if: ${{ !cancelled() }}

    - name: Install hatch
      shell: spack-bash {0}
      run: |
        spack env activate .
        pip install --upgrade pip
        pip install hatch
        hatch run verdi presto

    - name: Create SSH keys for AiiDA slurm SSH computer
      run: |
        # Create .ssh directory if it doesn't exist
        mkdir -p "${HOME}/.ssh"
        ssh-keygen -t rsa -b 2048 -f "${HOME}/.ssh/slurm_key"

        # Set correct permissions (SSH is strict about this)
        chmod 600 "${HOME}/.ssh/slurm_key"
        chmod 755 "${HOME}"

        # Extract public key and add to authorized_keys (this enables SSH login with the key)
        ssh-keygen -y -f "${HOME}/.ssh/slurm_key" >> "${HOME}/.ssh/authorized_keys"
        chmod 600 "${HOME}/.ssh/authorized_keys"

        # Add localhost to known_hosts (prevents host verification prompts)
        ssh-keyscan -H localhost -p 5001 >> "${HOME}/.ssh/known_hosts"

    - name: Run ICON tests (slurm-ssh computer created by fixture)
      shell: spack-bash {0}
      env:
        PYTEST_ADDOPTS: "--durations=0"
      run: |
        spack env activate .

        hatch test -- -m "requires_icon" -s tests

    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
      if: always()
